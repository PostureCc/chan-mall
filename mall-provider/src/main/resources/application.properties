##Encoding Settings
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

##MySQL Settings
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/chan_mall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=true
spring.datasource.username=root
spring.datasource.password=root
##开启驼峰命名转换
mybatis.configuration.map-underscore-to-camel-case=true

##MyBatis Settings
mybatis.mapper-locations=classpath:mapper/*.xml

##时间转换器
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

##Redis Settings
redis.hostName=172.20.1.205
#端口号
redis.port=6379
#如果有密码
redis.password=123456
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000


#最大空闲数
redis.maxIdle=100
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true



##druid
spring.datasource.type:com.alibaba.druid.pool.DruidDataSource
#最大活跃数
spring.datasource.maxActive:50
#初始化数量
spring.datasource.initialSize:5
#最大连接等待超时时间
spring.datasource.maxWait:60000
#打开PSCache，并且指定每个连接PSCache的大小
spring.datasource.poolPreparedStatements:true
spring.datasource.maxPoolPreparedStatementPerConnectionSize:20
#通过connectionProperties属性来打开mergeSql功能；慢SQL记录
connectionProperties:druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#最小连接池数量
spring.datasource.minIdle:1
spring.datasource.timeBetweenEvictionRunsMillis:60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis:300000
spring.datasource.validationQuery:select 1 from dual
#建议配置为true，不影响性能，并且保证安全性
spring.datasource.testWhileIdle:true
#申请连接时执行validationQuery检测连接是否有效
spring.datasource.testOnBorrow:false
#归还连接时执行validationQuery检测连接是否有效
spring.datasource.testOnReturn:false
#配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
filters:stat, wall, log4j
